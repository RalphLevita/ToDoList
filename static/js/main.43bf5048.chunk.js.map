{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["form","setInputText","todos","setTodos","inputText","setStatus","value","onChange","e","target","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","el","console","log","TodoList","filteredTodos","App","useState","status","setFilteredTodos","useEffect","getLocalTodos","filteredhandler","localStorage","getItem","setItem","JSON","stringify","todoLocal","parse","Form","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.43bf5048.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst form = ({ setInputText, todos, setTodos, inputText, setStatus }) => {\r\n    const inputTextHandler = (e) => {\r\n\r\n        setInputText(e.target.value)\r\n    };\r\n\r\n    const submitToDoHandler = (e) => {\r\n        e.preventDefault();\r\n        setTodos([\r\n            ...todos, {text: inputText, completed: false, id:Math.random() * 1000}\r\n        ]);\r\n        setInputText(\"\");\r\n    };\r\n\r\n    const statusHandler = (e) => {\r\n        setStatus(e.target.value);\r\n    }\r\n    return (\r\n        <form>\r\n            <input value={inputText} onChange={inputTextHandler} type=\"text\" className=\"todo-input\" />\r\n            <button onClick={submitToDoHandler} className= \"todo-button\" type=\"submit\">\r\n                <i className = \"fas fa-plus-square\"></i>\r\n            </button>\r\n            <div className = \"select\">\r\n                <select onChange = {statusHandler} name=\"todos\" className=\"filter-todo\">\r\n                    <option value=\"all\">All</option>\r\n                    <option value=\"completed\">Completed</option>\r\n                    <option value=\"uncompleted\">Uncompleted</option>\r\n                </select>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default form;","import React from 'react';\r\n\r\nconst Todo = ({text, todo, todos, setTodos}) => {\r\n\r\n    const deleteHandler = () => {\r\n        setTodos(todos.filter((el) => el.id !== todo.id));\r\n        console.log(todo)\r\n\r\n    };\r\n    const completeHandler = () => {\r\n        setTodos(todos.map(item => {\r\n            if(item.id === todo.id){\r\n                return {\r\n                    ...item, completed: !item.completed\r\n                }\r\n            }\r\n            return item;\r\n        }))\r\n    }\r\n        \r\n    return (\r\n        <div className=\"todo\">\r\n            <li className={`todo-item ${todo.completed? \"completed\" : \"\"} `}>{text}</li>\r\n            <button  onClick= {completeHandler} className=\"complete-btn\"> <i className=\"fas fa-check\"></i></button>\r\n            <button onClick= {deleteHandler} className=\"trash-btn\"> <i className=\"fas fa-trash\"></i></button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Todo;","import React from \"react\";\r\nimport Todo from './Todo';\r\n\r\nconst TodoList = ( { todos, setTodos, filteredTodos} ) => {\r\n    return (\r\n        <div className= \"todo-container\">\r\n            <ul className= \"todo-list\">\r\n                {filteredTodos.map((todo) => (\r\n                    <Todo setTodos={setTodos} todos={ todos } key ={todo.id} todo={todo} text={todo.text}/>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TodoList;"," import React from 'react';\nimport './App.css';\nimport Form from './components/Form';\nimport TodoList from './components/TodoList';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\n \n\nfunction App() {\n  \n  //STATE\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState (\"all\");\n  const [filteredTodos, setFilteredTodos] =useState([]);\n\n\n  // Run once\n  useEffect (() => {\n    getLocalTodos();\n  },[])\n  //USE EFFECT\n  useEffect (() => {\n    filteredhandler()\n  }, [todos,status])\n\n//FUNCTIONS\nconst filteredhandler = () => {\n  switch(status) {\n    case \"completed\":\n      setFilteredTodos(todos.filter((todo) => todo.completed === true));\n      break;\n    case \"uncompleted\":\n      setFilteredTodos(todos.filter((todo) => todo.completed === false));\n      break;\n    default:\n      setFilteredTodos(todos);\n      break;\n  }\n};\n  const saveLocalTodos = () => {\n      localStorage.setItem(\"todos\", JSON.stringify(todos));\n  };\n\n  const getLocalTodos = () => {\n    if (localStorage.getItem(\"todos\") === null) {\n      localStorage.setItem(\"todos\", JSON.stringify([]));\n    }else {\n     let todoLocal = JSON.parse(localStorage.getItem(\"todos\"));\n     setTodos(todoLocal);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header>\n      <h1>Todo List </h1>\n      </header>\n      <Form inputText={inputText} todos= {todos} setTodos={setTodos} setInputText={setInputText} setStatus={setStatus} />\n      <TodoList setTodos={setTodos} todos={todos} filteredTodos = {filteredTodos}/>\n    </div>\n  );\n} \n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}